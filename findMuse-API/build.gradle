plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.whh'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'   // mysql

    implementation 'com.github.mwiede:jsch:0.2.16'  // ssh tunneling

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'	//Swagger

    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'   // AWS S3

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0' // OpenFeign
    implementation 'io.github.openfeign:feign-jaxb' // OpenFeign


    // JWT
    implementation 'com.auth0:java-jwt:4.0.0'
    implementation 'com.nimbusds:nimbus-jose-jwt:3.10'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.72'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // JWT 토큰 생성 시 DatatypeConverter 필요 -> Java 9에서 deprecated 됨
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
